建造者模式
通过多个简单的对象逐步构建一个复杂的对象
例子：java中的StringBuilder类
使用场景：
对于一个复杂对象，通常包含多个子对象，实际情况中经常面临需要变更此复杂对象组成部分的情况。
理解说明：
例如KFC推出的各类套餐，每个套餐都是由多个食品组成，套餐就是一个复杂对象，组成食品可以看成是简单子对象，而套餐经常需要根据顾客需求或餐厅活动进行调整，
比如套餐A（素食汉堡+可口可乐），套餐B（鸡肉汉堡+百事可乐），可以看出套餐的组成过程是一致的，我们只需要对组成的部分进行调整就可以对某个复杂对象进行重构
优点：独立性强，易拓展
缺点：创建的产品（复杂对象）必须有共同点，所以存在一定的局限性；如果需要构建多个复杂对象时，相应builder也会增多使得系统越来越臃肿